apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.cordapp'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    // Corda integration dependencies
    cordaCompile project(':core')

    cordapp project(":samples:mapped-schema-demo:contracts")

    testCompile project(':node-driver')

    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "junit:junit:$junit_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_jupiter_version}"

    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${junit_vintage_version}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_jupiter_version}"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junit_platform_version}"

    testCompile "org.assertj:assertj-core:$assertj_version"
}

cordapp {
    targetPlatformVersion corda_platform_version.toInteger()
    minimumPlatformVersion 1
    workflow {
        name "Corda Custom CorDapp Database Schema Demo Workflows"
        versionId 1
        vendor "R3"
        licence "Open Source (Apache 2)"
    }
}
